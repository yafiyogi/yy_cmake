#
#
#  MIT License
#
#  Copyright (c) 2024 Yafiyogi
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#

# Add new build types
message("* Adding LSAN build types...")
# Linux
SET(YY_LINUX_LSAN_OPTIONS
    "-ggdb -fsanitize=address -fno-omit-frame-pointer -static-libstdc++ -static-libgcc" )


# MacOs
SET(YY_MACOS_LSAN_OPTIONS
    "-ggdb -fsanitize=leak -fno-omit-frame-pointer -static-libstdc++ -static-libgcc" )

if("${yy_system_name}" STREQUAL "darwin")
  set(YY_LSAN_OPTIONS "${YY_MACOS_LSAN_OPTIONS}")
elseif("${yy_system_name}" STREQUAL "linux")
  set(YY_LSAN_OPTIONS "${YY_LINUX_LSAN_OPTIONS}")
else()
  set(YY_LSAN_OPTIONS "")
endif()

SET(CMAKE_CXX_FLAGS_LSAN
    "${YY_DEBUG_FLAGS} -O0 ${YY_LSAN_OPTIONS}"
    CACHE STRING "Flags used by the C++ compiler during lsan builds."
    FORCE )

SET(CMAKE_C_FLAGS_LSAN
    "${YY_DEBUG_FLAGS} -O0 ${YY_LSAN_OPTIONS}"
    CACHE STRING "Flags used by the C compiler during lsan builds."
    FORCE )

SET(CMAKE_EXE_LINKER_FLAGS_LSAN
    ""
    CACHE STRING "Flags used for linking binaries during lsan builds."
    FORCE )

SET(CMAKE_SHARED_LINKER_FLAGS_LSAN
    ""
    CACHE STRING "Flags used by the shared libraries linker during lsan builds."
    FORCE )

MARK_AS_ADVANCED(
    CMAKE_CXX_FLAGS_LSAN
    CMAKE_C_FLAGS_LSAN
    CMAKE_EXE_LINKER_FLAGS_LSAN
    CMAKE_SHARED_LINKER_FLAGS_LSAN )
