#
#
#  MIT License
#
#  Copyright (c) 2024 Yafiyogi
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#

include(${YY_CMAKE}/cmake_llvm.txt)

find_program(YY_CLANG_TIDY_CMD clang-tidy)

set(YY_CLANG_TIDY_OPTIONS "--config-file=${YY_ROOT}/../yy_tools/clang-tidy.conf")
set(YY_TIDY_COMPILER_HEADER_PATHS
  -isystem /Users/tony/code/cpp/build/include
  -isystem /Users/tony/code/tp/include
  -isystem /opt/local/libexec/llvm-18/include/c++/v1
  -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/)
set(YY_TIDY_COMPILER_DEFINES
  "-DSPDLOG_COMPILED_LIB"
  "-DSPDLOG_FMT_EXTERNAL")

set(YY_TIDY_COMPILER_OPTIONS
  -std=c++20
  ${YY_TIDY_COMPILER_HEADER_PATHS}
  ${YY_TIDY_COMPILER_DEFINES}
  ${YY_CPP_OPTIONS_COMMON}
  ${YY_CPP_OPTIONS_LLVM})

#-std=c++20 -mmacosx-version-min=12.7 -fPIE -pedantic -Wall -Werror -Wextra -Wformat -Wformat=2 -Wconversion -Wimplicit-fallthrough -Wnon-virtual-dtor -Wnull-dereference -Woverloaded-virtual -Wsign-conversion -Wshadow -Wunused -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -fstack-protector-strong -fcf-protection=full -fPIE -fno-delete-null-pointer-checks -fno-strict-overflow -fno-strict-aliasing -D_GLIBCXX_ASSERTIONS)

function(add_yy_tidy_all tidy_target)
  get_target_property(YY_CLANG_TIDY_CPP_HEADERS ${tidy_target} HEADER_SET)
  if(YY_CLANG_TIDY_CPP_HEADERS STREQUAL "YY_CLANG_TIDY_CPP_HEADERS-NOTFOUND")
    set(YY_CLANG_TIDY_CPP_HEADERS "")
  endif()

  get_target_property(YY_CLANG_TIDY_CPP_SOURCES ${tidy_target} SOURCES)
  if(YY_CLANG_TIDY_CPP_SOURCES STREQUAL "YY_CLANG_TIDY_CPP_SOURCES-NOTFOUND")
    set(YY_CLANG_TIDY_CPP_SOURCES "")
  endif()

  set(YY_TIDY_REPORT "${tidy_target}.tidy.log")

  add_custom_target(tidy-all
    COMMAND rm -f ${YY_TIDY_REPORT} \; for f in "$$(" echo \"${YY_CLANG_TIDY_CPP_HEADERS} ${YY_CLANG_TIDY_CPP_SOURCES}\" | sed -n -e 's/;/ /pg' ")" \; do ${YY_CLANG_TIDY_CMD} ${YY_CLANG_TIDY_OPTIONS} "$$f" -- ${YY_TIDY_COMPILER_OPTIONS} >> ${YY_TIDY_REPORT} \; done)

  add_custom_target(tidy
    COMMAND rm -f ${YY_TIDY_REPORT} \; set YY_GIT_FILES "$$(" git ls-files -m | grep -e '\(\.cpp\|\.h\)$$' ")" \; if [ -n \"$$YY_GIT_FILES\" ] \; then for f in \"$$YY_GIT_FILES\" \; do ${YY_CLANG_TIDY_CMD} ${YY_CLANG_TIDY_OPTIONS} "$$f" -- ${YY_TIDY_COMPILER_OPTIONS} >> ${YY_TIDY_REPORT} \; done \; fi \; unset YY_GIT_FILES)
endfunction()
